//重写 Object.equals()方法

//public boolean equals(Object obj)
//{
//  if(obj ==null) 
//    return false;
//  else
//  {
//    if(obj instanceof Cat)
//    {
//      cat c = (cat)obj;
//      if(c.color == this.color && c.height == this.height)
//        {
//          return true;
//        }
//    }
//  }
//  return false;
//}



public class User {    
    //用户名称    
    private String userName;    
    //用户密码    
    private String password;    
        
    public User(String userName, String password){    
        this.userName = userName;    
        this.password = password;    
    }    
        
    /**  
     * 覆盖equals方法  
     */    
    public boolean equals(Object obj){    
        if(obj == null){    
            return false;    
        }    
            
        //如果是同一个对象返回true，反之返回false    
        if(this == obj){    
            return true;    
        }    
            
        //判断是否类型相同    
        if(this.getClass() != obj.getClass()){    
            return false;    
        }    
            
        User user = (User)obj;    
        return userName.equals(user.userName) && password.equals(user.password);    
    }    
    /**  
     * @param args  
     */    
    public static void main(String[] args) {    
        User user = new User("jing", "123");    
        User user01 = new User("jing", "123");    
        System.out.println(user.equals(user01));    
    }    
}
